name: Docker Build
description: Build docker images

inputs:
  version:
    description: Version of the image
    required: true
  container_repository:
    description: The container repository to store the image
    required: false
    default: 'nexus'
  dockernexus_username:
    description: The username to use to authenticate to the docker nexus
    required: true
  dockernexus_token:
    description: The token to use to authenticate to the docker nexus
    required: true
  github_token:
    description: The token to use to authenticate to the github
    required: true

outputs:
  docker_registry:
    description: The docker repository used
    value: ${{ steps.registry.outputs.registry }}

runs:
  using: composite

  steps:

    - name: Set up Docker Buildx
      # Fixing the version to the minor one. We used to use v2
      uses: docker/setup-buildx-action@v2

    - name: Define registry
      id: registry
      run: |
        if [[ "${{ inputs.container_repository }}" == "nexus" ]]; then
          echo "registry=nexus.playtomic.io" >> $GITHUB_OUTPUT
        else
          echo "registry=ghcr.io" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Nexus environment
      if: ${{ inputs.container_repository == 'nexus' }}
      run: |
        echo "REGISTRY=nexus.playtomic.io" >> $GITHUB_ENV
        echo "IMAGE=nexus.playtomic.io/${{ github.event.repository.name }}" >> $GITHUB_ENV
        echo "DOCKER_REPOSITORY=nexus.playtomic.io" >> $GITHUB_ENV
        echo "DOCKER_USERNAME=${{ inputs.dockernexus_username }}" >> $GITHUB_ENV
        echo "DOCKER_PASSWORD=${{ inputs.dockernexus_token }}" >> $GITHUB_ENV
      shell: bash

    - name: GHCR environment
      if: ${{ inputs.container_repository == 'ghcr' }}
      run: |
        echo "REGISTRY=ghcr.io" >> $GITHUB_ENV
        echo "IMAGE=ghcr.io/${{ github.event.repository.name }}" >> $GITHUB_ENV
        echo "DOCKER_REPOSITORY=ghcr.io/${{ github.repository_owner }}" >> $GITHUB_ENV  
        echo "DOCKER_USERNAME=${{ github.repository_owner }}" >> $GITHUB_ENV
        echo "DOCKER_PASSWORD=${{ inputs.github_token }}" >> $GITHUB_ENV
      shell: bash

    - name: Docker login
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Docker metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.IMAGE }}
        tags: |
          type=raw,value=${{ inputs.version }}

    - name: Build and push
      # Fixing the version to the minor one. We used to use v2
      uses: docker/bake-action@v2
      env:
        SERVICE_VERSION: ${{ inputs.version }}
      with:
        files: |
          ${{ steps.meta.outputs.bake-file }}
          docker-compose.yml
        push: true
        # specify SERVICE_VERSION as --build-arg is key, as this is the version we send to Datadog.
        set: |
          *.args.SERVICE_VERSION=${{ inputs.version }}
          *.cache-from=type=registry,ref=${{ github.repository }}:latest
          *.cache-to=type=inline
